-- MySQL Script generated by MySQL Workbench
-- Thu Mar 30 18:19:37 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Dono da Googel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Dono da Googel` (
  `idDono da Googel` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `idade` INT NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idDono da Googel`));


-- -----------------------------------------------------
-- Table `mydb`.`Funcionário`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Funcionário` (
  `idFuncionário` INT NOT NULL,
  `sexo` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `conjuge` VARCHAR(45) NOT NULL,
  `idade` INT NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  `Dono da Googel_idDono da Googel` INT NOT NULL,
  PRIMARY KEY (`idFuncionário`, `Dono da Googel_idDono da Googel`),
  CONSTRAINT `fk_Funcionário_Dono da Googel1`
    FOREIGN KEY (`Dono da Googel_idDono da Googel`)
    REFERENCES `mydb`.`Dono da Googel` (`idDono da Googel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Filho`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Filho` (
  `idFilho` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `idade` VARCHAR(45) NOT NULL,
  `escola` VARCHAR(45) NOT NULL,
  `sexo` VARCHAR(1) NOT NULL,
  `Funcionário_idFuncionário` INT NOT NULL,
  PRIMARY KEY (`idFilho`, `Funcionário_idFuncionário`),
  CONSTRAINT `fk_Filho_Funcionário`
    FOREIGN KEY (`Funcionário_idFuncionário`)
    REFERENCES `mydb`.`Funcionário` (`idFuncionário`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Departamento` (
  `identificacao` VARCHAR(10) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `localizacao` VARCHAR(45) NOT NULL,
  `Dono da Googel_idDono da Googel` INT NOT NULL,
  PRIMARY KEY (`identificacao`, `Dono da Googel_idDono da Googel`),
  CONSTRAINT `fk_Departamento_Dono da Googel1`
    FOREIGN KEY (`Dono da Googel_idDono da Googel`)
    REFERENCES `mydb`.`Dono da Googel` (`idDono da Googel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Funcionário_has_Departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Funcionário_has_Departamento` (
  `Funcionário_idFuncionário` INT NOT NULL,
  `Departamento_identificacao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Funcionário_idFuncionário`, `Departamento_identificacao`),
  CONSTRAINT `fk_Funcionário_has_Departamento_Funcionário1`
    FOREIGN KEY (`Funcionário_idFuncionário`)
    REFERENCES `mydb`.`Funcionário` (`idFuncionário`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionário_has_Departamento_Departamento1`
    FOREIGN KEY (`Departamento_identificacao`)
    REFERENCES `mydb`.`Departamento` (`identificacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`Coordenador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Coordenador` (
  `idCoordenador` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `idade` INT NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  `Departamento_identificacao` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idCoordenador`, `Departamento_identificacao`),
  CONSTRAINT `fk_Coordenador_Departamento1`
    FOREIGN KEY (`Departamento_identificacao`)
    REFERENCES `mydb`.`Departamento` (`identificacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);